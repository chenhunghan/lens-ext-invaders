on:
  pull_request:
    types: [closed]

jobs:
  versioning:
    name: Auto versioning/tag => Create a release with .tgz
    # github does not have PR event type 'merged' for github action
    # so we use 'closed' instead, and add condition:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
        fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

    # same node.js version as in package.json > engines
    - uses: actions/setup-node@v2-beta
      with:
        node-version: '12'
    
    # npm version patch will automatically git commit/tag
    - name: Run 'npm version patch'
      run: |
        git config --local user.email "github-action@github.com"
        git config --local user.name "Github Action Bot"
        npm version patch

    - name: Push commits
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true

    - name: Install dependencies and build extension
      run: |
        yarn
        yarn build

    - name: Create tarball from package
      run: yarn pack

    - name: Create GitHub release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Get release tag from git revision
      run: |
        GITHUB_REF=${{ github.ref }}
        GITHUB_TAG=${GITHUB_REF#refs/tags/v}
        echo "GITHUB_TAG=$GITHUB_TAG" >> $GITHUB_ENV

    - name: Upload GitHub assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: lensapp-lens-ext-invaders-v${{ env.GITHUB_TAG }}.tgz
        asset_name: lensapp-lens-ext-invaders-v${{ env.GITHUB_TAG }}.tgz
        asset_content_type: application/octet-stream
